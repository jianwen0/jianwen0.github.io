<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhang Jianwen&#39;s BLOG</title>
  
  <subtitle>https://zhangjianwen.me</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangjianwen.me/"/>
  <updated>2019-05-21T03:38:23.948Z</updated>
  <id>https://zhangjianwen.me/</id>
  
  <author>
    <name>Zhang Jianwen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hello world</title>
    <link href="https://zhangjianwen.me/2019/05/21/hello-world/"/>
    <id>https://zhangjianwen.me/2019/05/21/hello-world/</id>
    <published>2019-05-21T02:44:03.000Z</published>
    <updated>2019-05-21T03:38:23.948Z</updated>
    
    <content type="html"><![CDATA[<p>万事皆从 <code>hello world</code> 开始。</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>段落装饰器是 Python 的一种重要编程实践，然而如果没有掌握其原理和适当的方法，写 Python 装饰器时就可能遇到各种困难。犹记得当年校招时应聘今日头条 Python 开发岗位，因一道 Python 装饰器的设计问题而止于终面，非常遗憾。随着编程技术的提升以及对 Python 装饰器更加深入的理解，我逐渐总结出一套自顶而下的装饰器设计方法，这个方法能够指导我们轻松写出各种类型的装饰器，再也不用像以前那样死记硬背装饰器的模板代码。简单的装饰器函数就像上面介绍的那样，不带任何参数。假设我们要设计一个装饰器函数，其功能是能使得被装饰的函数调用结束后，打印出函数运行时间，我们来看看使用自顶而下的方法来设计这个装饰器该怎么做。装饰器的框架搭好了，接下来就是“下”，丰富函数逻辑。对被装饰的函数调用等价于对 <code>wrapper</code> 函数的调用，为了使 <code>wrapper</code> 调用返回和被装饰函数调用一样的结果，我们可以在 <code>wrapper</code> 中调用原函数并返回其调用结果。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'hello world.'</span>)</span><br></pre></td></tr></table></figure><p>输入命令：<code>ssserver -c ss.config.json -d start</code>，启动Shadowsocks服务器端。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;万事皆从 &lt;code&gt;hello world&lt;/code&gt; 开始。&lt;/p&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
  </entry>
  
</feed>
